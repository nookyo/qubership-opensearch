name: Run Opensearch Pipeline

permissions:
  contents: read

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
 
  workflow_run:
    workflows: ["Build Artifacts"]
    types:
      - completed
 
jobs:
  debug:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.event == 'pull_request'
    steps:
      - name: Show debug info
        run: |
          echo "Event payload:"
          echo "${{ toJson(github.event) }}"
          echo "Head branch is ${{ github.event.workflow_run.head_branch }}"
          echo "Pull Requests payload:"
          echo "${{ toJson(github.event.workflow_run.pull_requests) }}"

  start-self-hosted-runner:
    if: github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'success'
    uses: Netcracker/qubership-terraform-hub/.github/workflows/ec2-control.yml@main
    with:
      instance_id: ${{ vars.AWS_GITHUB_RUNNER_ID }}
      action: "start"
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  Opensearch-Pipeline:
    if: github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'success'
    needs: start-self-hosted-runner
    uses: Netcracker/qubership-test-pipelines/.github/workflows/opensearch.yaml@e75a24c6a1e5d843de60674e9a395ecb003f5cf3
    with:
      service_branch: "${{ github.event.workflow_run.head_branch }}"
      versions_file: ".github/versions.yaml"
      pipeline_branch: "e75a24c6a1e5d843de60674e9a395ecb003f5cf3" #this value must match the value after '@' in 'uses'
      runner_type: "self-hosted"
    secrets:
      AWS_S3_ACCESS_KEY_ID: ${{secrets.AWS_S3_ACCESS_KEY_ID}}
      AWS_S3_ACCESS_KEY_SECRET: ${{secrets.AWS_S3_ACCESS_KEY_SECRET}}

  stop-self-hosted-runner:
    if: always() && github.event.workflow_run.event == 'pull_request'
    needs: Opensearch-Pipeline
    uses: Netcracker/qubership-terraform-hub/.github/workflows/ec2-control.yml@main
    with:
      instance_id: ${{ vars.AWS_GITHUB_RUNNER_ID }}
      action: "stop"
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
